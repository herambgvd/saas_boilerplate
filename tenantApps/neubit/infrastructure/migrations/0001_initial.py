# Generated by Django 4.2.7 on 2023-12-07 11:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('branch', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CameraTag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('tagName', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('users', models.ManyToManyField(blank=True, related_name='tagUser', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Camera Tags',
                'permissions': [('view_tag', 'Can assign camera tag')],
            },
        ),
        migrations.CreateModel(
            name='CCTV',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('selectManufacturer', models.CharField(choices=[('Hikvision', 'Hikvision'), ('Milesight', 'Milesight'), ('Octocam', 'Octocam'), ('CP-Plus', 'CP-Plus'), ('Dahua', 'Dahua'), ('Axis', 'Axis')], max_length=100)),
                ('slugName', models.CharField(max_length=30)),
                ('deviceID', models.CharField(max_length=30)),
                ('rtspLink', models.CharField(blank=True, max_length=100, null=True)),
                ('hlsLink', models.CharField(blank=True, max_length=100, null=True)),
                ('hlsCreated', models.BooleanField(blank=True, default=False, null=True)),
                ('recordingStatus', models.BooleanField(blank=True, default=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'CCTV',
            },
        ),
        migrations.CreateModel(
            name='VOD',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stream_id', models.CharField(max_length=500)),
                ('creation_date', models.BigIntegerField()),
                ('start_time', models.BigIntegerField()),
                ('duration', models.BigIntegerField()),
                ('file_size', models.BigIntegerField()),
                ('vod_id', models.CharField(max_length=500, unique=True)),
                ('file_path', models.CharField(default='No Path', max_length=500, unique=True)),
                ('cctv', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vod', to='infrastructure.cctv')),
            ],
            options={
                'verbose_name_plural': 'CCTV VODs',
            },
        ),
        migrations.CreateModel(
            name='Panel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('selectManufacturer', models.CharField(choices=[('Texecom', 'Texecom')], max_length=100)),
                ('slugName', models.CharField(max_length=30)),
                ('deviceID', models.CharField(blank=True, max_length=30, null=True)),
                ('username', models.CharField(blank=True, max_length=30, null=True)),
                ('password', models.CharField(blank=True, max_length=30, null=True)),
                ('ipAddress', models.CharField(max_length=30)),
                ('port', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('selectBranch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='branchPanel', to='branch.branch')),
            ],
            options={
                'verbose_name_plural': 'Panel',
            },
        ),
        migrations.CreateModel(
            name='NVR',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('selectManufacturer', models.CharField(choices=[('Hikvision', 'Hikvision'), ('Octocam', 'Octocam')], max_length=100)),
                ('slugName', models.CharField(blank=True, max_length=100, null=True)),
                ('username', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=100)),
                ('ipAddress', models.CharField(max_length=100)),
                ('port', models.IntegerField()),
                ('playbackUrl', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('selectBranch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='branchNvr', to='branch.branch')),
            ],
            options={
                'verbose_name_plural': 'NVR',
            },
        ),
        migrations.CreateModel(
            name='IotGateway',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('gatewayName', models.CharField(blank=True, max_length=100, null=True)),
                ('gatewayIp', models.CharField(blank=True, max_length=100, null=True)),
                ('username', models.CharField(blank=True, max_length=100, null=True)),
                ('password', models.CharField(blank=True, max_length=100, null=True)),
                ('fetchDevice', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('selectBranch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='branchIOTConfig', to='branch.branch')),
            ],
            options={
                'verbose_name_plural': 'IOT Gateway',
            },
        ),
        migrations.CreateModel(
            name='IotDevice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('selectSensor', models.CharField(blank=True, choices=[('Environment', 'Environment'), ('Controller', 'Controller'), ('Security', 'Security'), ('HVAC', 'HVAC'), ('Smart Spaces', 'Smart Spaces'), ('Energy', 'Energy')], default='Controller', max_length=100, null=True)),
                ('devEUI', models.CharField(max_length=200, unique=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('selectBranch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='branchIOT', to='branch.branch')),
                ('selectGateway', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='gatewayIOT', to='infrastructure.iotgateway')),
                ('selectTag', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='TaggedIOT', to='infrastructure.cameratag')),
            ],
            options={
                'verbose_name_plural': 'IOT Device',
            },
        ),
        migrations.AddField(
            model_name='cctv',
            name='selectNvr',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nvr_cctv', to='infrastructure.nvr'),
        ),
        migrations.AddField(
            model_name='cctv',
            name='selectTag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='TaggedCCTV', to='infrastructure.cameratag'),
        ),
    ]
